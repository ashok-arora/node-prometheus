# Ports:
## 9090: Prometheus - for scraping metrics
## 3000: Grafana - for visualizing metrics
## 3010: App - for serving the app
## 8080: Mongo Express - for visualizing the database
## 27017: MongoDB - for storing the database
## 8000: Portainer - for managing the containers

version: "3.3"
services:
  portainer:
    ports:
      - "8000:8000"
      - "9443:9443"
    container_name: portainer
    restart: always
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "portainer_data:/data"
    image: "portainer/portainer-ce:latest"

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - prometheus_data:/prometheus
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    ports:
      - "9090:9090"
    restart: always

  grafana:
    image: grafana/grafana:latest
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/config.ini:/etc/grafana/config.ini
    depends_on:
      - prometheus
    ports:
      - "3000:3000"
    restart: always

  mongodb:
    image: mongo
    container_name: mongodb
    ports:
      - 27017:27017
    environment:
      - MONGO_INITDB_ROOT_USERNAME=rootuser
      - MONGO_INITDB_ROOT_PASSWORD=rootpass
    restart: always

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    ports:
      - 8080:8081
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=rootuser
      - ME_CONFIG_MONGODB_ADMINPASSWORD=rootpass
      - ME_CONFIG_MONGODB_SERVER=mongodb
    links:
      - mongodb
    restart: always

  app:
    build:
      context: ./
      dockerfile: Dockerfile
    ports:
      - "3010:3010"
    restart: always

volumes:
  mongodb-data:
    driver: local
  portainer_data: {}
  prometheus_data: {}
  grafana_data: {}
